---
import type { HTMLAttributes } from "astro/types";

import propsplit from "propsplit";

import { ClassesKeys, classex } from "./../../classes";

import * as BadgeKlass from "./Badge.klass";

type Props = HTMLAttributes<"span"> & BadgeKlass.Variants & BadgeKlass.InnerVariants & BadgeKlass.ChildVariants;

const [classes, klass, attrs] = propsplit(Astro.props, ClassesKeys, [...BadgeKlass.Root.vk, ...BadgeKlass.Child.vk]);

const className = classex(BadgeKlass.Root({ color: klass.color, size: klass.size }), classes);
const innerClassName = BadgeKlass.Inner({ color: klass.color });
const childClassName = BadgeKlass.Child({ font: klass.font, size: klass.size });
---

<span {...attrs} class={className}>
	<div class={innerClassName}>
		<div class={childClassName}>
			<slot />
		</div>
	</div>
</span>
