---
import type { HTMLAttributes } from "astro/types";

import propsplit from "propsplit";

import * as klass from "./../.klass";
import * as reklass from "./../.reklass";

import { ClassesKeys, classex } from "~/components/classes";

type Props = Omit<HTMLAttributes<"div">, "style"> & {
	family?: klass.TypographyVariants["ff"];
	size?: klass.TypographyVariants["fz"];
	style?: klass.TypographyVariants["fs"];
	weight?: klass.TypographyVariants["fw"];
	align?: klass.TypographyVariants["ta"];
} & reklass.MarginVariants &
	reklass.PaddingVariants;

const { family = "sans", size = "3", style = "n", weight = "4", align = ":--", ...props } = Astro.props;

const [classes, margin, padding, attrs] = propsplit(props, ClassesKeys, reklass.Margin.rvk, reklass.Padding.rvk);

const className = classex(
	[
		klass.Typography({
			ff: family,
			fz: size,
			fs: style,
			fw: weight,
			ta: align,
		}),
		reklass.Margin(margin),
		reklass.Padding(padding),
	],
	classes
);
---

<div {...attrs} class={className}>
	<slot />
</div>
