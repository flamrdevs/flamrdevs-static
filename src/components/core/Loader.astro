---
import type { HTMLAttributes } from "astro/types";

import * as LoaderKlass from "./Loader.klass";

import { splitProps, getRootClassesx } from "./core";

type Props = HTMLAttributes<"svg"> & LoaderKlass.Variants;

const [classes, props] = getRootClassesx(Astro.props);

const [klass, attrs] = splitProps(props, ["color", "size"]);

const className = classes(LoaderKlass.Root(klass));
---

<svg {...attrs} class={className} viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
	<g class="g">
		<circle class="circle" cx="12" cy="12" r="9.5" fill="none" stroke-width="2"></circle>
	</g>
</svg>

<style>
	.g {
		transform-origin: center;
		animation: loader-spin-o 2s linear infinite;
	}
	.circle {
		stroke-linecap: round;
		animation: loader-spin-i 1.5s ease-in-out infinite;
	}
	@keyframes loader-spin-o {
		100% {
			transform: rotate(360deg);
		}
	}
	@keyframes loader-spin-i {
		0% {
			stroke-dasharray: 0 150;
			stroke-dashoffset: 0;
		}
		47.5% {
			stroke-dasharray: 42 150;
			stroke-dashoffset: -16;
		}
		95%,
		100% {
			stroke-dasharray: 42 150;
			stroke-dashoffset: -59;
		}
	}
</style>
