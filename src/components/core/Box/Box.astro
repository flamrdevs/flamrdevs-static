---
import propsplit from "propsplit";

import { ClassesKeys, classex } from "./../../classes";
import type * as Polymorphic from "./../../polymorphic";

import * as klass from "./../.klass";
import * as reklass from "./../.reklass";

import type { BoxPolymorphicProps } from "./Box.types";

type Props<As extends Polymorphic.As = "div"> = BoxPolymorphicProps<As>;

const { as: As = "div", ...props } = Astro.props;

const [classes, typography, layout, position, margin, padding, attrs] = propsplit(
	props,
	ClassesKeys,
	klass.Typography.vk,
	reklass.Layout.rvk,
	reklass.Position.rvk,
	reklass.Margin.rvk,
	reklass.Padding.rvk
);

const className = classex([klass.Typography(typography), reklass.Layout(layout), reklass.Position(position), reklass.Margin(margin), reklass.Padding(padding)], classes);
---

<As {...attrs as any} class={className}>
	<slot />
</As>
