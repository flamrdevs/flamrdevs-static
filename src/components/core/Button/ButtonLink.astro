---
import type { HTMLAttributes } from "astro/types";

import propsplit from "propsplit";

import * as ButtonKlass from "./Button.klass";

import { getButtonAttrs } from "./../attributes/button";
import type { ButtonOptions } from "./../attributes/button";

import { getRootClassesx } from "~/components/classes";

type Props = Omit<HTMLAttributes<"a">, "href"> & { href: string } & ButtonOptions & ButtonKlass.Variants & ButtonKlass.InnerVariants & ButtonKlass.ChildVariants;

const [classes, props] = getRootClassesx(Astro.props);

const [options, klass, attrs] = propsplit(props, ["disabled"], [...ButtonKlass.Root.vk, ...ButtonKlass.Child.vk]);

const className = classes(ButtonKlass.Root({ color: klass.color, size: klass.size }));
const innerClassName = ButtonKlass.Inner({ color: klass.color });
const childClassName = ButtonKlass.Child({ font: klass.font, size: klass.size });
---

<a role="button" {...attrs} class={className} {...getButtonAttrs(options)}>
	<div class={innerClassName}>
		<div class={childClassName}>
			<slot />
		</div>
	</div>
</a>
