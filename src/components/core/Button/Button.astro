---
import propsplit from "propsplit";

import { ClassesKeys, classex } from "./../../classes";
import type * as Polymorphic from "./../../polymorphic";

import { getButtonAttrs } from "./../attributes/button";
import type { ButtonOptions } from "./../attributes/button";

import * as ButtonKlass from "./Button.klass";

type Props<As extends Polymorphic.As = "button"> = Polymorphic.Props<As, ButtonOptions & ButtonKlass.Variants>;

const { as: As = "button", ...props } = Astro.props;

const [classes, options, klass, attrs] = propsplit(props, ClassesKeys, ["disabled"], ButtonKlass.Root.vk);

const className = classex(ButtonKlass.Root(klass), classes);
---

<As class={className} {...getButtonAttrs(options, As)} {...attrs as any}>
	<slot />
</As>
